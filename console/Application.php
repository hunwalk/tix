<?php

namespace app\console;

use app\commands\BaseController;
use app\commands\TixController;
use yii\helpers\ArrayHelper;
use yii\helpers\Inflector;

class Application extends \yii\console\Application
{
    //we should not allow core yii commands here
    public $enableCoreCommands = true;

    public function init()
    {
        $this->enableCoreCommands = false;
        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * We preformat the commands here to be able to reroute basic commands to ShoeController
     */
    public function handleRequest($request)
    {
        list($route, $params) = $request->resolve();

        if (!$route){
            $params = $request->params;
            $params[0] = 'help/index';
            $request->setParams($params);
        }

        //first check for inline actions
        if (ArrayHelper::isIn('action'.Inflector::camelize($route),get_class_methods(TixController::class))){
            //reroute request
            $params = $request->params;
            $params[0] = 'shoe/'.$route;
            $request->setParams($params);
        }else{
            //check for shoe actions inside actions method
            $controller = \Yii::createObject(TixController::class);
            if ($controller instanceof BaseController){
                //its autobinded
                $actions = $controller->actions;
            }else{
                $actions = $controller->actions();
            }

            //merge with autobinded actions
            if (ArrayHelper::keyExists($route,$actions)){
                //reroute request
                $params = $request->params;
                $params[0] = 'shoe/'.$route;
                $request->setParams($params);
            }
        }

        //We let yii handle the rest of the request
        return parent::handleRequest($request);
    }
}